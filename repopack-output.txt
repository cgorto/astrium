This file is a merged representation of the entire codebase, combining all repository files into a single document.
Generated by Repopack on: 2024-09-25T21:44:02.061Z

================================================================
File Summary
================================================================

Purpose:
--------
This file contains a packed representation of the entire repository's contents.
It is designed to be easily consumable by AI systems for analysis, code review,
or other automated processes.

File Format:
------------
The content is organized as follows:
1. This summary section
2. Repository information
3. Repository structure
4. Multiple file entries, each consisting of:
  a. A separator line (================)
  b. The file path (File: path/to/file)
  c. Another separator line
  d. The full contents of the file
  e. A blank line

Usage Guidelines:
-----------------
- This file should be treated as read-only. Any changes should be made to the
  original repository files, not this packed version.
- When processing this file, use the file path to distinguish
  between different files in the repository.
- Be aware that this file may contain sensitive information. Handle it with
  the same level of security as you would the original repository.

Notes:
------
- Some files may have been excluded based on .gitignore rules and Repopack's
  configuration.
- Binary files are not included in this packed representation. Please refer to
  the Repository Structure section for a complete list of file paths, including
  binary files.

Additional Info:
----------------

For more information about Repopack, visit: https://github.com/yamadashy/repopack

================================================================
Repository Structure
================================================================
.gitattributes
.gitignore
icon.svg
icon.svg.import
project.godot
scenes/component/death_component.gd
scenes/component/death_component.tscn
scenes/component/gold_drop_component.gd
scenes/component/gold_drop_component.tscn
scenes/component/health_component.gd
scenes/component/health_component.tscn
scenes/component/hitbox_component.gd
scenes/component/hitbox_component.tscn
scenes/component/hurtbox_component.gd
scenes/component/hurtbox_component.tscn
scenes/component/velocity_component.gd
scenes/component/velocity_component.tscn
scenes/game_object/basic_enemy/basic_enemy.gd
scenes/game_object/basic_enemy/basic_enemy.tscn
scenes/game_object/player/player.tscn

================================================================
Repository Files
================================================================

================
File: .gitattributes
================
# Normalize EOL for all files that Git considers text files.
* text=auto eol=lf

================
File: .gitignore
================
# Godot 4+ specific ignores
.godot/
/android/

================
File: icon.svg
================
<svg xmlns="http://www.w3.org/2000/svg" width="128" height="128"><rect width="124" height="124" x="2" y="2" fill="#363d52" stroke="#212532" stroke-width="4" rx="14"/><g fill="#fff" transform="translate(12.322 12.322)scale(.101)"><path d="M105 673v33q407 354 814 0v-33z"/><path fill="#478cbf" d="m105 673 152 14q12 1 15 14l4 67 132 10 8-61q2-11 15-15h162q13 4 15 15l8 61 132-10 4-67q3-13 15-14l152-14V427q30-39 56-81-35-59-83-108-43 20-82 47-40-37-88-64 7-51 8-102-59-28-123-42-26 43-46 89-49-7-98 0-20-46-46-89-64 14-123 42 1 51 8 102-48 27-88 64-39-27-82-47-48 49-83 108 26 42 56 81zm0 33v39c0 276 813 276 814 0v-39l-134 12-5 69q-2 10-14 13l-162 11q-12 0-16-11l-10-65H446l-10 65q-4 11-16 11l-162-11q-12-3-14-13l-5-69z"/><path d="M483 600c0 34 58 34 58 0v-86c0-34-58-34-58 0z"/><circle cx="725" cy="526" r="90"/><circle cx="299" cy="526" r="90"/></g><g fill="#414042" transform="translate(12.322 12.322)scale(.101)"><circle cx="307" cy="532" r="60"/><circle cx="717" cy="532" r="60"/></g></svg>

================
File: icon.svg.import
================
[remap]

importer="texture"
type="CompressedTexture2D"
uid="uid://kmdyoni6cqu2"
path="res://.godot/imported/icon.svg-218a8f2b3041327d8a5756f3a245f83b.ctex"
metadata={
"vram_texture": false
}

[deps]

source_file="res://icon.svg"
dest_files=["res://.godot/imported/icon.svg-218a8f2b3041327d8a5756f3a245f83b.ctex"]

[params]

compress/mode=0
compress/high_quality=false
compress/lossy_quality=0.7
compress/hdr_compression=1
compress/normal_map=0
compress/channel_pack=0
mipmaps/generate=false
mipmaps/limit=-1
roughness/mode=0
roughness/src_normal=""
process/fix_alpha_border=true
process/premult_alpha=false
process/normal_map_invert_y=false
process/hdr_as_srgb=false
process/hdr_clamp_exposure=false
process/size_limit=0
detect_3d/compress_to=1
svg/scale=1.0
editor/scale_with_editor_scale=false
editor/convert_colors_with_editor_theme=false

================
File: project.godot
================
; Engine configuration file.
; It's best edited using the editor UI and not directly,
; since the parameters that go here are not all obvious.
;
; Format:
;   [section] ; section goes between []
;   param=value ; assign values to parameters

config_version=5

[application]

config/name="FleetSurvivors"
config/features=PackedStringArray("4.4", "Forward Plus")
config/icon="res://icon.svg"

[debug]

gdscript/warnings/untyped_declaration=2

[dotnet]

project/assembly_name="FleetSurvivors"

================
File: scenes/component/death_component.gd
================
extends Node2D

@export var health_component: Node
@export var sprite: Sprite2D

#handles death vfx

================
File: scenes/component/death_component.tscn
================
[gd_scene load_steps=2 format=3 uid="uid://d385meipho767"]

[ext_resource type="Script" path="res://scenes/component/death_component.gd" id="1_l78ig"]

[node name="DeathComponent" type="Node2D"]
script = ExtResource("1_l78ig")

================
File: scenes/component/gold_drop_component.gd
================
extends Node

@export var value: int = 1
@export_range(0,1) var drop_percent: float = 0.5
@export var health_component: Node
@export var gold_scene: PackedScene

func _ready() -> void:
	(health_component as HealthComponent).died.connect(on_died)
	
func on_died() -> void:
	var adjusted_drop_percent:= drop_percent
	
	if randf() > adjusted_drop_percent:
		return
	
	if gold_scene == null:
		return
	
	if not owner is Node2D:
		return
		
	var spawn_position: Vector2 = (owner as Node2D).global_position
	var gold_instance: Node2D = gold_scene.instantiate() as Node2D
	var entities_layer: Node2D = get_tree().get_first_node_in_group("entities_layer") #Maybe make this an autoload idk
	entities_layer.add_child(gold_instance)
	gold_instance.global_position = spawn_position

================
File: scenes/component/gold_drop_component.tscn
================
[gd_scene load_steps=2 format=3 uid="uid://3m23b2v7bw1k"]

[ext_resource type="Script" path="res://scenes/component/gold_drop_component.gd" id="1_ynq6o"]

[node name="GoldDropComponent" type="Node"]
script = ExtResource("1_ynq6o")

================
File: scenes/component/health_component.gd
================
extends Node
class_name HealthComponent

signal died
signal health_changed
signal health_decreased

@export var max_health: int = 10
var current_health: int

func _ready() -> void:
	current_health = max_health
	
func damage(damage_amount:int) -> void:
	current_health = clamp(current_health - damage_amount,0,max_health)
	health_changed.emit()
	if damage_amount > 0:
		health_decreased.emit()
	check_death.call_deferred()
	
func heal(heal_amount: int) -> void:
	damage(-heal_amount)
	
func check_death() -> void:
	if current_health == 0:
		died.emit()
		#maybe just queuefree here, maybe do other stuff

================
File: scenes/component/health_component.tscn
================
[gd_scene load_steps=2 format=3 uid="uid://dmtst8fnji83l"]

[ext_resource type="Script" path="res://scenes/component/health_component.gd" id="1_bsl3c"]

[node name="HealthComponent" type="Node"]
script = ExtResource("1_bsl3c")

================
File: scenes/component/hitbox_component.gd
================
class_name HitboxComponent extends Area2D

var damage: int = 0

================
File: scenes/component/hitbox_component.tscn
================
[gd_scene load_steps=2 format=3 uid="uid://lepdapn4l4b4"]

[ext_resource type="Script" path="res://scenes/component/hitbox_component.gd" id="1_mt1a6"]

[node name="HitboxComponent" type="Area2D"]
script = ExtResource("1_mt1a6")

================
File: scenes/component/hurtbox_component.gd
================
class_name HurtboxComponent extends Area2D

signal hit

@export var health_component: Node

func on_area_entered(other_area:Area2D) -> void:
	if not other_area is HitboxComponent:
		return
	if health_component == null:
		return

	var hitbox_component: HitboxComponent = other_area as HitboxComponent
	#TODO: When health component is done
	#health_component.damage(hitbox_component.damage)
	hit.emit()

================
File: scenes/component/hurtbox_component.tscn
================
[gd_scene load_steps=2 format=3 uid="uid://c7rtcedycu7kt"]

[ext_resource type="Script" path="res://scenes/component/hurtbox_component.gd" id="1_wu5w4"]

[node name="HurtboxComponent" type="Area2D"]
script = ExtResource("1_wu5w4")

================
File: scenes/component/velocity_component.gd
================
extends Node

@export var max_speed: int = 50
@export var acceleration: float = 5

var velocity: Vector2 = Vector2.ZERO

func accelerate_to_player() -> void:
	var owner_node2d: = owner as Node2D
	if owner_node2d == null:
		return
	var player: = get_tree().get_first_node_in_group("player") as Node2D
	if player == null:
		return
	var direction: Vector2 = (player.global_position - owner_node2d.global_position).normalized()
	accelerate_in_direction(direction)
	

func accelerate_in_direction(direction: Vector2) -> void:
	var desired_velocity:Vector2 = direction * max_speed
	velocity = velocity.lerp(desired_velocity, 1 - exp(-acceleration * get_process_delta_time()))
	
func decelerate() -> void:
	accelerate_in_direction(Vector2.ZERO)
	
func move(character_body: CharacterBody2D) -> void:
	character_body.velocity = velocity
	character_body.move_and_slide()
	velocity = character_body.velocity

================
File: scenes/component/velocity_component.tscn
================
[gd_scene load_steps=2 format=3 uid="uid://bg3se6ow6a6si"]

[ext_resource type="Script" path="res://scenes/component/velocity_component.gd" id="1_3eren"]

[node name="VelocityComponent" type="Node"]
script = ExtResource("1_3eren")

================
File: scenes/game_object/basic_enemy/basic_enemy.gd
================
extends CharacterBody2D

================
File: scenes/game_object/basic_enemy/basic_enemy.tscn
================
[gd_scene load_steps=8 format=3 uid="uid://cwegtty4ubuew"]

[ext_resource type="PackedScene" uid="uid://dmtst8fnji83l" path="res://scenes/component/health_component.tscn" id="1_1t0vd"]
[ext_resource type="Script" path="res://scenes/game_object/basic_enemy/basic_enemy.gd" id="1_m3ob5"]
[ext_resource type="PackedScene" uid="uid://3m23b2v7bw1k" path="res://scenes/component/gold_drop_component.tscn" id="2_0x4hd"]
[ext_resource type="PackedScene" uid="uid://bg3se6ow6a6si" path="res://scenes/component/velocity_component.tscn" id="3_qc8h4"]
[ext_resource type="PackedScene" uid="uid://c7rtcedycu7kt" path="res://scenes/component/hurtbox_component.tscn" id="4_moee5"]

[sub_resource type="CircleShape2D" id="CircleShape2D_dvb6p"]

[sub_resource type="CircleShape2D" id="CircleShape2D_64img"]

[node name="BasicEnemy" type="CharacterBody2D"]
script = ExtResource("1_m3ob5")

[node name="HealthComponent" parent="." instance=ExtResource("1_1t0vd")]

[node name="GoldDropComponent" parent="." instance=ExtResource("2_0x4hd")]

[node name="VelocityComponent" parent="." instance=ExtResource("3_qc8h4")]

[node name="HurtboxComponent" parent="." node_paths=PackedStringArray("health_component") instance=ExtResource("4_moee5")]
health_component = NodePath("../HealthComponent")

[node name="CollisionShape2D" type="CollisionShape2D" parent="HurtboxComponent"]
shape = SubResource("CircleShape2D_dvb6p")

[node name="Visuals" type="Node2D" parent="."]

[node name="CollisionShape2D" type="CollisionShape2D" parent="."]
visible = false
shape = SubResource("CircleShape2D_64img")

================
File: scenes/game_object/player/player.tscn
================
[gd_scene load_steps=7 format=3 uid="uid://cosksya8rw27g"]

[ext_resource type="PackedScene" uid="uid://dmtst8fnji83l" path="res://scenes/component/health_component.tscn" id="1_37tc3"]
[ext_resource type="PackedScene" uid="uid://bg3se6ow6a6si" path="res://scenes/component/velocity_component.tscn" id="2_uivue"]
[ext_resource type="PackedScene" uid="uid://c7rtcedycu7kt" path="res://scenes/component/hurtbox_component.tscn" id="3_wegcm"]
[ext_resource type="Texture2D" uid="uid://cyommen8wp42c" path="res://scenes/game_object/player/ship_0004.png" id="4_ik7p1"]

[sub_resource type="CircleShape2D" id="CircleShape2D_75bju"]

[sub_resource type="CircleShape2D" id="CircleShape2D_iarlc"]

[node name="Player" type="CharacterBody2D"]

[node name="HealthComponent" parent="." instance=ExtResource("1_37tc3")]

[node name="VelocityComponent" parent="." instance=ExtResource("2_uivue")]

[node name="HurtboxComponent" parent="." node_paths=PackedStringArray("health_component") instance=ExtResource("3_wegcm")]
health_component = NodePath("../HealthComponent")

[node name="CollisionShape2D" type="CollisionShape2D" parent="HurtboxComponent"]
shape = SubResource("CircleShape2D_75bju")

[node name="Visuals" type="Node2D" parent="."]

[node name="Sprite2D" type="Sprite2D" parent="Visuals"]
texture = ExtResource("4_ik7p1")

[node name="CollisionShape2D" type="CollisionShape2D" parent="."]
visible = false
shape = SubResource("CircleShape2D_iarlc")
